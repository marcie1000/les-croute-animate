# -*- CMakeLists.txt generated by CodeLite IDE. Do not edit by hand -*-

cmake_minimum_required(VERSION 3.0)


#{{{{ User Code 01
# Place your code here
#}}}}

enable_language(CXX C ASM)
# Project name
project(animate)



#{{{{ User Code 02
# Place your code here
#}}}}

# This setting is useful for providing JSON file used by CodeLite for code completion
set(CMAKE_EXPORT_COMPILE_COMMANDS 1)

set(CONFIGURATION_NAME "Debug")

set(CL_WORKSPACE_DIRECTORY ..)
# Set default locations
set(CL_OUTPUT_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/${CL_WORKSPACE_DIRECTORY}/cmake-build-${CONFIGURATION_NAME}/output)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})

# Projects


# Top project
# Define some variables
set(PROJECT_animate_PATH "${CMAKE_CURRENT_LIST_DIR}")
set(WORKSPACE_PATH "${CMAKE_CURRENT_LIST_DIR}/..")



#{{{{ User Code 1
# Place your code here
#}}}}

include_directories(
    .

)


# Compiler options
add_definitions(-gdwarf-2)
add_definitions(-O0)
add_definitions(-Wall)
add_definitions(-std=c17)
add_definitions(-pedantic)
add_definitions(-fno-common)
add_definitions(-fno-builtin)

# Linker options


if(WIN32)
    # Resource options
endif(WIN32)

# Library path
link_directories(
    .
)

# Define the C sources
set ( C_SRCS
    ${CMAKE_CURRENT_LIST_DIR}/fichiers.c
    ${CMAKE_CURRENT_LIST_DIR}/collisions.c
    ${CMAKE_CURRENT_LIST_DIR}/anim.c
    ${CMAKE_CURRENT_LIST_DIR}/textures_fx.c
    ${CMAKE_CURRENT_LIST_DIR}/npc.c
    ${CMAKE_CURRENT_LIST_DIR}/audio.c
    ${CMAKE_CURRENT_LIST_DIR}/main.c
    ${CMAKE_CURRENT_LIST_DIR}/fx_switch_events.c
    ${CMAKE_CURRENT_LIST_DIR}/sdl_init_and_quit.c
)

set_source_files_properties(
    ${C_SRCS} PROPERTIES COMPILE_FLAGS 
    " -std=c17 -O0 -gdwarf-2 -pedantic -std=c17 -Wall -fno-common -fno-builtin")

if(WIN32)
    enable_language(RC)
    set(CMAKE_RC_COMPILE_OBJECT
        "<CMAKE_RC_COMPILER> ${RC_OPTIONS} -O coff -i <SOURCE> -o <OBJECT>")
endif(WIN32)



#{{{{ User Code 2
# Place your code here
#}}}}

add_executable(animate ${RC_SRCS} ${CXX_SRCS} ${C_SRCS} ${ASM_SRCS})
target_link_libraries(animate ${LINK_OPTIONS})

target_link_libraries(animate
    SDL2
    SDL2_ttf
    SDL2_image
    SDL2_mixer
    m
)



#{{{{ User Code 3
# Place your code here
#}}}}

